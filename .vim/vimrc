set nocompatible 		" must be first lin
set background=dark     " Assume a dark background

call pathogen#infect()


filetype plugin indent on  	" Automatically detect file types.
syntax on 					" syntax highlighting
set mouse=a					" automatically enable mouse usage

colorscheme solarized
set gfn=Monaco:h14

scriptencoding utf-8
set history=1000  				" Store a ton of history (default is 20)
set spell 		 	        	" spell checking on
set virtualedit=onemore 	   	" allow for cursor beyond last character

set showmode                   	" display the current mode
set cursorline  				" highlight current line

if has('cmdline_info')
	set ruler                  	" show the ruler
	set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " a ruler on steroids
	set showcmd                	" show partial commands in status line and
								" selected characters/lines in visual mode
endif

if has('statusline')
      set laststatus=2

	" Broken down into easily includeable segments
	set statusline=%<%f\    " Filename
	set statusline+=%w%h%m%r " Options
	set statusline+=%{fugitive#statusline()} "  Git Hotness
	set statusline+=\ [%{&ff}/%Y]            " filetype
	set statusline+=\ [%{getcwd()}]          " current dir
	"set statusline+=\ [A=\%03.3b/H=\%02.2B] " ASCII / Hexadecimal value of char
	set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
endif


set backspace=indent,eol,start	" backspace for dummys
set linespace=0					" No extra spaces between rows
set nu							" Line numbers on
set showmatch					" show matching brackets/parenthesis
set incsearch					" find as you type search
set hlsearch					" highlight search terms
set winminheight=0				" windows can be 0 line high 
set ignorecase					" case insensitive search
set smartcase					" case sensitive when uc present
set wildmenu					" show list instead of just completing
set wildmode=list:longest,full	" command <Tab> completion, list matches, then longest common part, then all.
" set whichwrap=b,s,h,l,<,>,[,] " backspace and cursor keys wrap to
set scrolljump=5        " lines to scroll when cursor leaves screen
set scrolloff=3 				" minimum lines to keep above and below cursor
" set foldenable          " auto fold code
"set gdefault          " the /g flag on :s substitutions by default
"set list
"set listchars=tab:>.,trail:.,extends:#,nbsp:. " Highlight problematic whitespace


" Formatting {
	set nowrap                     	" wrap long lines
	set autoindent                 	" indent at the same level of the previous line
	set shiftwidth=4               	" use indents of 4 spaces
	set expandtab 	  	     		" tabs are spaces, not tabs
	set tabstop=4 					" an indentation every four columns
	set softtabstop=4 				" let backspace delete indent
	"set matchpairs+=<:>            	" match, to be used with % 
	set pastetoggle=<F12>          	" pastetoggle (sane indentation on pastes)
	"set comments=sl:/*,mb:*,elx:*/  " auto format comment blocks
	" Remove trailing whitespaces and ^M chars
	autocmd FileType c,cpp,java,php,js,python,twig,xml,yml autocmd BufWritePre <buffer> :call setline(1,map(getline(1,"$"),'substitute(v:val,"\\s\\+$","","")'))
    au BufNewFile,BufReadPost *.coffee setl shiftwidth=2 expandtab
    au BufNewFile,BufReadPost *.css setl shiftwidth=2 expandtab
    au BufNewFile,BufReadPost *.html setl shiftwidth=2 expandtab
    
" }

"The default leader is '\', but many people prefer ',' as it's in a standard
"location
let mapleader = ','

  " Making it so ; works like : for commands. Saves typing and eliminates :W style typos due to lazy holding shift.
  nnoremap ; :
  "clearing highlighted search
  nmap <silent> <leader>/ :nohlsearch<CR>


"Disable arrow keys
inoremap <Left>  <NOP>
inoremap <Right> <NOP>
inoremap <Up>    <NOP>
inoremap <Down>  <NOP>

"NERDCommenter apple-/ toggle commenting
nmap <M-/> ,c<space>
vmap <M-/> ,c<space>
imap <M-/> <C-O>,c<space>

let g:Tex_DefaultTargetFormat = 'pdf'
let g:Tex_ViewRule_pdf = 'open -a Preview.app'

